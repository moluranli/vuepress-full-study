import{_ as n,c as a,d as e,o as p}from"./app-zW3Lf4SL.js";const l={};function i(t,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="redis" tabindex="-1"><a class="header-anchor" href="#redis"><span>Redis</span></a></h1><p><a href="https://www.bilibili.com/video/BV1Rv41177Af?p=5" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV1Rv41177Af?p=5</a></p><h2 id="常见的nosql数据库" tabindex="-1"><a class="header-anchor" href="#常见的nosql数据库"><span>常见的Nosql数据库</span></a></h2><ul><li><p>Memcache数据库,Memcache不支持持久化,多线程加锁</p></li><li><p>Redis数据库,非关系数据库,在此基础上可以实现主从同步 ,单线程加多路复用技术</p></li><li><p>MongoDB数据库</p></li></ul><p><img src="https://s2.loli.net/2022/04/27/hSzcoVWpOyCuf8R.png" alt="image-20220416190536589"></p><h2 id="redis底层原理" tabindex="-1"><a class="header-anchor" href="#redis底层原理"><span>Redis底层原理</span></a></h2><h3 id="单线程加多路复用技术" tabindex="-1"><a class="header-anchor" href="#单线程加多路复用技术"><span>单线程加多路复用技术</span></a></h3><blockquote><p>比如买火车票,三个人买票,三个人都将买票的操作交给到黄牛,这三个人在没拿到票的时候都去干自己的事情,这个时候如果黄牛买到票就会通知对应的那个人来拿票.</p></blockquote><p>这里**“多路”<strong>指的是多个网络连接客户端，</strong>“复用”**指的是复用同一个线程(单进程)。I/O 多路复用其实是使用一个线程来检查多个 Socket 的就绪状态，在单个线程中通过记录跟踪每一个 socket（I/O流）的状态来管理处理多个 I/O 流</p><p><img src="https://s2.loli.net/2022/04/27/G81tOe7XFQVUDd5.png" alt="img"></p><ul><li>(1)一个 socket 客户端与服务端连接时，会生成对应一个套接字描述符(套接字描述符是文件描述符的一种)，每一个 socket 网络连接其实都对应一个文件描述符。</li><li>(2)多个客户端与服务端连接时，Redis 使用 <strong>「I/O 多路复用程序」</strong> 将客户端 socket 对应的 FD 注册到监听列表(一个队列)中。当客服端执行 read、write 等操作命令时，I/O 多路复用程序会将命令封装成一个事件，并绑定到对应的 FD 上。</li><li>(3)**「文件事件处理器」**使用 I/O 多路复用模块同时监控多个文件描述符（fd）的读写情况，当 <code>accept</code>、<code>read</code>、<code>write</code> 和 <code>close</code> 文件事件产生时，文件事件处理器就会回调 FD 绑定的事件处理器进行处理相关命令操作。</li></ul><h2 id="redis常用操作命令" tabindex="-1"><a class="header-anchor" href="#redis常用操作命令"><span>Redis常用操作命令</span></a></h2><h3 id="key操作命令" tabindex="-1"><a class="header-anchor" href="#key操作命令"><span>key操作命令</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">keys *//查看数据库中的所有key</span>
<span class="line"></span>
<span class="line">del key//删除key</span>
<span class="line"></span>
<span class="line">exists key//查看key是否存在</span>
<span class="line"></span>
<span class="line">expire key <span class="token number">10</span>//设置10秒过期时间,key需要存在</span>
<span class="line"></span>
<span class="line">ttl key查看还有多少秒</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据库操作" tabindex="-1"><a class="header-anchor" href="#数据库操作"><span>数据库操作</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token keyword">select</span> <span class="token number">0</span>//切换数据库,默认为0,共有16个数据库</span>
<span class="line"></span>
<span class="line">dbsize // 查看当前数据库key的数量</span>
<span class="line"></span>
<span class="line">flushdb//清空当前数据库</span>
<span class="line"></span>
<span class="line">flushall//清空所有数据库</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redis五大数据类型" tabindex="-1"><a class="header-anchor" href="#redis五大数据类型"><span>Redis五大数据类型</span></a></h2><h3 id="_1-string" tabindex="-1"><a class="header-anchor" href="#_1-string"><span>1. String</span></a></h3><p>介绍</p><p><img src="https://s2.loli.net/2022/04/27/kpN5nsUvVJbAXPO.png" alt="image-20220416200623992"></p><p>常用命令</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token builtin class-name">set</span> key value//设置key-value值</span>
<span class="line"></span>
<span class="line">get key//获取key对应的value</span>
<span class="line"></span>
<span class="line">append key value//将value加在key对应的value后面,并且返回加入后字符串的长度</span>
<span class="line"></span>
<span class="line">strlen key//获取key对应value的长度</span>
<span class="line"></span>
<span class="line">setnx key value 只有在key不存在时,才能设置 </span>
<span class="line"></span>
<span class="line">incr key//value是数字的时候,key对应的value加一</span>
<span class="line"></span>
<span class="line">decr key//value是数值的时候,key对应的value减一</span>
<span class="line"></span>
<span class="line">incrby key 步长//根据设置步长加一</span>
<span class="line"></span>
<span class="line">decrby key 步长//根据设置步长减一</span>
<span class="line"></span>
<span class="line">mset key value value</span>
<span class="line"></span>
<span class="line"><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>等等</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>redis具有原子性,而java中的i++不是原子性操作</p><p><img src="https://s2.loli.net/2022/04/27/BTDNls1fLwqthuW.png" alt="image-20220416202440927"></p><h3 id="_2-其他数据类型" tabindex="-1"><a class="header-anchor" href="#_2-其他数据类型"><span>2.其他数据类型</span></a></h3><p>略</p><h2 id="新增的三种数据类型" tabindex="-1"><a class="header-anchor" href="#新增的三种数据类型"><span>新增的三种数据类型</span></a></h2><h3 id="bitmap" tabindex="-1"><a class="header-anchor" href="#bitmap"><span>BitMap</span></a></h3><blockquote><p>bitmap里的value都是以01存储</p></blockquote><p><img src="https://s2.loli.net/2022/04/27/H8Bx4ZdweR6MStq.png" alt="image-20220418093602214"></p><p><img src="https://s2.loli.net/2022/04/27/wlV7UhZ2fcsYDAv.png" alt="image-20220418093732230"></p><h3 id="hyperloglog" tabindex="-1"><a class="header-anchor" href="#hyperloglog"><span>HyperLogLog</span></a></h3><blockquote><p>求集合中不重复元素的个数</p></blockquote><p><img src="https://s2.loli.net/2022/04/27/hOik26TCjFMAqXS.png" alt="image-20220418093933408"></p><h3 id="geospaatial" tabindex="-1"><a class="header-anchor" href="#geospaatial"><span>Geospaatial</span></a></h3><blockquote><p>用于地理位置</p></blockquote><p><img src="https://s2.loli.net/2022/04/27/nS64Oowpyia8CQH.png" alt="image-20220418094107207"></p><h2 id="redis事务和锁机制" tabindex="-1"><a class="header-anchor" href="#redis事务和锁机制"><span>Redis事务和锁机制</span></a></h2><p><img src="https://s2.loli.net/2022/04/27/WV649FNneJBp8Uc.png" alt="image-20220417161653903"></p><h3 id="multi-exec-discard" tabindex="-1"><a class="header-anchor" href="#multi-exec-discard"><span>Multi, Exec,Discard</span></a></h3><p><img src="https://s2.loli.net/2022/04/27/dfEMvO8xcsRIKri.png" alt="image-20220417161856176"></p><h3 id="事务的错误处理" tabindex="-1"><a class="header-anchor" href="#事务的错误处理"><span>事务的错误处理</span></a></h3><p>如果在组队的时候任何一个命令错误,队列将会被取消.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> multi</span>
<span class="line">OK</span>
<span class="line"><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">set</span> k1 v1</span>
<span class="line">QUEUED</span>
<span class="line"><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">set</span> k2 v2</span>
<span class="line">QUEUED</span>
<span class="line"><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">set</span> k3</span>
<span class="line"><span class="token punctuation">(</span>error<span class="token punctuation">)</span> ERR wrong number of arguments <span class="token keyword">for</span> <span class="token string">&#39;set&#39;</span> <span class="token builtin class-name">command</span></span>
<span class="line"><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">exec</span></span>
<span class="line"><span class="token punctuation">(</span>error<span class="token punctuation">)</span> EXECABORT Transaction discarded because of previous errors.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果在执行阶段某一个命令报错,只有报错的命令不会执行</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> multi</span>
<span class="line">OK</span>
<span class="line"><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">set</span> k1 v1</span>
<span class="line">QUEUED</span>
<span class="line"><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> incr k1</span>
<span class="line">QUEUED</span>
<span class="line"><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">set</span> k2 v2</span>
<span class="line">QUEUED</span>
<span class="line"><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">exec</span></span>
<span class="line"><span class="token number">1</span><span class="token punctuation">)</span> OK</span>
<span class="line"><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> ERR value is not an integer or out of range</span>
<span class="line"><span class="token number">3</span><span class="token punctuation">)</span> OK</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="事务的冲突问题" tabindex="-1"><a class="header-anchor" href="#事务的冲突问题"><span>事务的冲突问题</span></a></h3><blockquote><p>账户一共有10000</p><p>同时有三个请求:</p><p>第一个请求拿8000元, 第二个请求拿4000元, 第三个请求拿1000元</p></blockquote><h4 id="悲观锁" tabindex="-1"><a class="header-anchor" href="#悲观锁"><span>悲观锁</span></a></h4><p>给事务加上锁,需要执行时需要拿到锁才能执行下一步操作.</p><p><img src="https://s2.loli.net/2022/04/27/T4nNQrc3Gs6fYD1.png" alt="image-20220417163520543"></p><h4 id="乐观锁" tabindex="-1"><a class="header-anchor" href="#乐观锁"><span>乐观锁</span></a></h4><p>给事务加一个版本号,每个人都能拿到这个版本号,他们执行对应操作后,快的那个人执行完相应操作后就会将版本号更新,另一个人操作时,会相比较自己获取的版本号与当前的版本是否相同,如果不相同就会重新设置自己获取的版本号.然后继续竞争执行操作</p><p><img src="https://s2.loli.net/2022/04/27/J9YEPzsI1XioLy6.png" alt="image-20220418204252274"></p><h3 id="事务的乐观锁命令操作" tabindex="-1"><a class="header-anchor" href="#事务的乐观锁命令操作"><span>事务的乐观锁命令操作</span></a></h3><blockquote><p>使用watch,取消监视使用unwatch</p></blockquote><p>开启两个窗口使用同一数据,在两个窗口中都使用watch是key进行监视,同时设置key的值,使用multi将操作加入队列中,在其中一个窗口中执行exec命令,命令成功运行,但是执行另外一个的时候,会发现版本号不对造成执行失败</p><p>其中一个窗口</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> k1 <span class="token number">10</span></span>
<span class="line">OK</span>
<span class="line"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token function">watch</span> k1</span>
<span class="line">OK</span>
<span class="line"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> multi</span>
<span class="line">OK</span>
<span class="line"><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> incrby k1 <span class="token number">100</span></span>
<span class="line">QUEUED</span>
<span class="line"><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">exec</span></span>
<span class="line"><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">110</span></span>
<span class="line"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另一个窗口</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k1</span>
<span class="line"><span class="token string">&quot;10&quot;</span></span>
<span class="line"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token function">watch</span> k1</span>
<span class="line">OK</span>
<span class="line"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> multi</span>
<span class="line">OK</span>
<span class="line"><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> incrby k1 <span class="token number">200</span></span>
<span class="line">QUEUED</span>
<span class="line"><span class="token number">127.0</span>.0.1:6379<span class="token punctuation">(</span>TX<span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token builtin class-name">exec</span></span>
<span class="line"><span class="token punctuation">(</span>nil<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="redis事务的三大特性" tabindex="-1"><a class="header-anchor" href="#redis事务的三大特性"><span>redis事务的三大特性</span></a></h3><p><img src="https://s2.loli.net/2022/04/27/lsjMmJxFLQkNtAU.png" alt="image-20220418094423786"></p><h2 id="redis事务实例-秒杀" tabindex="-1"><a class="header-anchor" href="#redis事务实例-秒杀"><span>Redis事务实例:秒杀</span></a></h2><h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecKillServiceImpl</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token class-name">SecKill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> userid <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> productid <span class="token operator">=</span> <span class="token string">&quot;0101&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">String</span> prokey <span class="token operator">=</span> <span class="token string">&quot;pro:&quot;</span><span class="token operator">+</span>productid<span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">String</span> userkey <span class="token operator">=</span> <span class="token string">&quot;user:&quot;</span><span class="token operator">+</span>productid<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Jedis</span> jedis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedis</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span><span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        jedis<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span>prokey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>prokey<span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;商品不存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>prokey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;商品已售完&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">sismember</span><span class="token punctuation">(</span>userkey<span class="token punctuation">,</span>userid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;你已参与过秒杀&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Transaction</span> multi <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">multi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        multi<span class="token punctuation">.</span><span class="token function">decr</span><span class="token punctuation">(</span>prokey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        multi<span class="token punctuation">.</span><span class="token function">sadd</span><span class="token punctuation">(</span>userkey<span class="token punctuation">,</span>userid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> exec <span class="token operator">=</span> multi<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>exec<span class="token punctuation">)</span><span class="token operator">||</span>exec<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;秒杀失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;秒杀成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h3><p>单纯不是用事务的时候,使用jmeter进行高并发测试,会出现库存为-1的情况,这个时候就需要使用jedis.multi进行事务的管理</p><blockquote><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token comment">//代码中以下改为事务</span></span>
<span class="line"><span class="token class-name">Transaction</span> multi <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">multi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">multi<span class="token punctuation">.</span><span class="token function">decr</span><span class="token punctuation">(</span>prokey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">multi<span class="token punctuation">.</span><span class="token function">sadd</span><span class="token punctuation">(</span>userkey<span class="token punctuation">,</span>userid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> exec <span class="token operator">=</span> multi<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>exec<span class="token punctuation">)</span><span class="token operator">||</span>exec<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;秒杀失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">jedis<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p>同时会有read time out的错误出现</p><p>使用jedispoot,jedis连接池可以解决此问题</p><p><a href="https://www.bilibili.com/video/BV1Rv41177Af?p=26" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV1Rv41177Af?p=26</a></p><p>再将库存设为500,线程设为5000时,会出现库存滞销问题,即线程跑完仍然有库存,原因是因为几个线程同时执行操作时,只有一个成功,其他的因为版本号不同会失败,使用LUA脚本解决</p><h2 id="redis的持久化操作" tabindex="-1"><a class="header-anchor" href="#redis的持久化操作"><span>Redis的持久化操作</span></a></h2><h3 id="_1-rdb" tabindex="-1"><a class="header-anchor" href="#_1-rdb"><span>1. RDB</span></a></h3><blockquote><p>使用写实复制技术</p></blockquote><p>在进行修改的时候,会先fork一个子进程,这个子进程会先生成一个存储数据的临时文件,然后在通过临时文件修改dump.rdb文件,这么做是为了防止如果直接保存到dump.rdb时,如果服务器异常,那么dump.rdb文件中保存的数据不完整.</p><p><img src="https://s2.loli.net/2022/04/27/cRqA253KUgXjN97.png" alt="image-20220419100432975"></p><h3 id="_2-aof" tabindex="-1"><a class="header-anchor" href="#_2-aof"><span>2. AOF</span></a></h3><blockquote><p>以日志的形式记录每一次写操作,只允许追加文件,redis重新启动时就会读这个文件,执行文件操作</p></blockquote><p>会生成appendonly.aof文件,aof默认关闭,当aof和rdb都开启时,使用aof</p><p><img src="https://s2.loli.net/2022/04/27/fWVnAuNsOLaUkRm.png" alt="image-20220419104512045"><img src="https://s2.loli.net/2022/04/27/rwMa9Y45s3jTgZq.png" alt="image-20220419104610301"></p><p>aof存在bug,造成恢复数据出错.</p><h2 id="redis主从复制" tabindex="-1"><a class="header-anchor" href="#redis主从复制"><span>Redis主从复制</span></a></h2><h3 id="复制原理" tabindex="-1"><a class="header-anchor" href="#复制原理"><span>复制原理</span></a></h3><blockquote><p>在从服务器连接主服务器的时候,从服务器会先主服务器发出一个请求,主服务器收到请求后,会持久化自己的数据,生成.rdb的文件,然后将文件传给从服务器,这样从服务器就会有数据了</p><p>在主服务器进行写数据的时候,主服务器会自动发起同步从服务器</p></blockquote><p><img src="https://s2.loli.net/2022/04/27/lofiByWXqFRJd41.png" alt="image-20220419141257577"></p><h3 id="设置服务-windows下" tabindex="-1"><a class="header-anchor" href="#设置服务-windows下"><span>设置服务:windows下</span></a></h3><p><img src="https://s2.loli.net/2022/04/27/AwnFXoVlWTJMGhD.png" alt="image-20220419124344545"></p><p>在从服务器的redis.windows.conf配置对应的端口号</p><blockquote><p>slaveof ip地址 端口号//连接主服务器的ip地址和端口号</p></blockquote><p>使用对应命令启动三个redis服务</p><blockquote><p>.\\redis-server.exe redis.windows.conf</p></blockquote><p>然后开启对应的三个服务</p><blockquote><p>.\\redis-cli.exe -p 6379</p></blockquote><h3 id="一主多从" tabindex="-1"><a class="header-anchor" href="#一主多从"><span>一主多从</span></a></h3><p>只允许主服务器进行写操作,写入之后,从服务器同样具有数据,不允许从服务区进行写操作,会报如下错误</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token number">127.0</span>.0.1:638<span class="token operator"><span class="token file-descriptor important">0</span>&gt;</span> <span class="token builtin class-name">set</span> k2 v2</span>
<span class="line"><span class="token punctuation">(</span>error<span class="token punctuation">)</span> READONLY You can&#39;t <span class="token function">write</span> against a <span class="token builtin class-name">read</span> only slave.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常用操作" tabindex="-1"><a class="header-anchor" href="#常用操作"><span>常用操作</span></a></h3><h4 id="一主二仆" tabindex="-1"><a class="header-anchor" href="#一主二仆"><span>一主二仆</span></a></h4><ol><li>如果从服务器消失,同时在配置文件中没有指定slaveof即没有配置关联的话,从服务器重启后会变为主服务器,需要重新使用命令slaveof命令重新变为主服务器(如果配置文件中配置了slaveof的话,从服务器重启后还是从服务器)</li><li>如果主服务器消失,从服务器还是从服务器,只是不能从主服务器同步数据,如果主服务器重启后,就会同步数据</li><li>从服务器重启后,会同步主服务器中的所有数据.</li></ol><h4 id="薪火相传" tabindex="-1"><a class="header-anchor" href="#薪火相传"><span>薪火相传</span></a></h4><p>将一台从服务器改为另一台从服务器的主服务器</p><p>使用 slaveof ip port</p><p>一台从服务器消失,后面的从服务器就会失效, 主机消失,从服务器还是从服务器</p><h4 id="反客为主" tabindex="-1"><a class="header-anchor" href="#反客为主"><span>反客为主</span></a></h4><p>如果主服务器消失,对从服务器使用命令</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">slaveof no one</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>就会将从服务器变为主服务器</p><p>需要手动完成,可以使用哨兵模式实现自动完成</p><h3 id="哨兵机制" tabindex="-1"><a class="header-anchor" href="#哨兵机制"><span>哨兵机制</span></a></h3><blockquote><p>建立一个哨兵对服务器进行监视,如果主服务器消失,那么哨兵会根据redis.conf的配置文件中寻找优先级关系,是优先级高的从服务器变为主服务器,这个时候以前的主服务器也会变成当前主服务器的从服务器</p><p>哨兵选择主服务器根据 1,配置文件设置的优先级 2.和前主服务器相似度最高 3.runid最小</p><p>runid redis启动后都会随机 生成对应的40位runid</p><p>系统很繁忙时,复制会有很大延时</p></blockquote><h4 id="操作" tabindex="-1"><a class="header-anchor" href="#操作"><span>操作</span></a></h4><p>建立配置文件 sentinel.conf</p><p>输入内容:sentinel monitor mymaster 127.0.0.1 6381 1</p><p>然后启动哨兵:./redis-server.exe sentinel.conf --sentinel</p><p>这样哨兵就会监视服务器.</p><p>sentinel.conf文件内容:会根据当前哨兵选举服务器信息进行自动修改</p><p>CONFIG REWRITE: 由将内存中的配置覆盖文件中的配置生成</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token number">6379</span>端口消失后 文件内容</span>
<span class="line">sentinel myid 7b077f767d959b4bbcca3c97d08d3256c7828397</span>
<span class="line"><span class="token comment"># Generated by CONFIG REWRITE</span></span>
<span class="line">port <span class="token number">26379</span></span>
<span class="line"><span class="token function">dir</span> <span class="token string">&quot;C:<span class="token entity" title="\\\\">\\\\</span>yzx<span class="token entity" title="\\\\">\\\\</span>Redis-x64-4.0.2.3&quot;</span></span>
<span class="line">sentinel monitor mymaster <span class="token number">127.0</span>.0.1 <span class="token number">6381</span> <span class="token number">1</span></span>
<span class="line">sentinel config-epoch mymaster <span class="token number">1</span></span>
<span class="line">sentinel leader-epoch mymaster <span class="token number">1</span></span>
<span class="line">sentinel known-slave mymaster <span class="token number">127.0</span>.0.1 <span class="token number">6380</span></span>
<span class="line">sentinel known-slave mymaster <span class="token number">127.0</span>.0.1 <span class="token number">6379</span></span>
<span class="line">sentinel current-epoch <span class="token number">1</span></span>
<span class="line"></span>
<span class="line"><span class="token number">6381</span>端口消失后 文件内容</span>
<span class="line">sentinel myid 7b077f767d959b4bbcca3c97d08d3256c7828397</span>
<span class="line"><span class="token comment"># Generated by CONFIG REWRITE</span></span>
<span class="line">port <span class="token number">26379</span></span>
<span class="line"><span class="token function">dir</span> <span class="token string">&quot;C:<span class="token entity" title="\\\\">\\\\</span>yzx<span class="token entity" title="\\\\">\\\\</span>Redis-x64-4.0.2.3&quot;</span></span>
<span class="line">sentinel monitor mymaster <span class="token number">127.0</span>.0.1 <span class="token number">6380</span> <span class="token number">1</span></span>
<span class="line">sentinel config-epoch mymaster <span class="token number">2</span></span>
<span class="line">sentinel leader-epoch mymaster <span class="token number">2</span></span>
<span class="line">sentinel known-slave mymaster <span class="token number">127.0</span>.0.1 <span class="token number">6381</span></span>
<span class="line">sentinel known-slave mymaster <span class="token number">127.0</span>.0.1 <span class="token number">6379</span></span>
<span class="line">sentinel current-epoch <span class="token number">2</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redis集群操作" tabindex="-1"><a class="header-anchor" href="#redis集群操作"><span>Redis集群操作</span></a></h2><h3 id="问题-1" tabindex="-1"><a class="header-anchor" href="#问题-1"><span>问题</span></a></h3><p><img src="https://s2.loli.net/2022/04/27/3okV1rT4g5PGIR8.png" alt="image-20220419190212275"></p><h3 id="主机代理模式" tabindex="-1"><a class="header-anchor" href="#主机代理模式"><span>主机代理模式</span></a></h3><blockquote><p>使用了较多的服务器,不合理</p></blockquote><p><img src="https://s2.loli.net/2022/04/27/ZPczsD3K26S7eUt.png" alt="image-20220419190331827"></p><h3 id="无中心集群方式" tabindex="-1"><a class="header-anchor" href="#无中心集群方式"><span>无中心集群方式</span></a></h3><blockquote><p>每一台服务器都可以作为进入集群的入口</p></blockquote><p><img src="https://s2.loli.net/2022/04/27/Fhb3pwoefWr7zqc.png" alt="image-20220419190420047"></p><h3 id="集群设置" tabindex="-1"><a class="header-anchor" href="#集群设置"><span>集群设置</span></a></h3><blockquote><p>参照视频: <a href="https://www.bilibili.com/video/BV1Rv41177Af?p=37&amp;spm_id_from=pageDriver" target="_blank" rel="noopener noreferrer">集群操作</a></p></blockquote><p><img src="https://s2.loli.net/2022/04/27/EMoKRSYuTsWFkbe.png" alt="image-20220419192435879"></p><h4 id="redis集群创建操作" tabindex="-1"><a class="header-anchor" href="#redis集群创建操作"><span>Redis集群创建操作</span></a></h4><blockquote><p>首先镜像本身是不能进行相互通信的,所以为了使不同的redis进行通信,需要建立一个新的网络连接,然后使用这个网络连接为每个redis容器分配ip</p></blockquote><p>首先建立新的网络连接</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">docker</span> network create redis-cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后根据不同的端口号配置redis.conf配置文件</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment">##节点端口</span></span>
<span class="line">port <span class="token number">6379</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">##cluster集群模式</span></span>
<span class="line">cluster-enabled <span class="token function">yes</span></span>
<span class="line"><span class="token comment">##集群配置名</span></span>
<span class="line">cluster-config-file nodes.conf</span>
<span class="line"><span class="token comment">##超时时间</span></span>
<span class="line">cluster-node-timeout <span class="token number">5000</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">## 慢查询</span></span>
<span class="line">slowlog-log-slower-than <span class="token number">10000</span></span>
<span class="line">slowlog-max-len <span class="token number">128</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">## 持久化模式</span></span>
<span class="line">appendonly <span class="token function">yes</span></span>
<span class="line"><span class="token comment">## 持久化文件目录</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">## 内存相关配置</span></span>
<span class="line">maxmemory 100M</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后启动6个redis实例</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> redis6379 <span class="token parameter variable">-p</span> <span class="token number">6379</span>:6379 <span class="token parameter variable">-v</span> D:<span class="token punctuation">\\</span>docker<span class="token punctuation">\\</span>redis<span class="token punctuation">\\</span>redis6379.conf:/usr/local/etc/redis/redis.conf <span class="token parameter variable">--net</span> redis-cluster redis:latest redis-server /usr/local/etc/redis/redis.conf</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>设置映射文件,分配ip 以redis.conf启动redis-server服务</p><p>启动了6个之后,可以使用</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">docker</span> network inspect redis-cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>参看6个redis容器的ip,然后随便进入一个容器中,使用命令</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">redis-cli <span class="token parameter variable">--cluster</span> create <span class="token number">172.18</span>.0.2:6379  <span class="token number">172.18</span>.0.3:6380  <span class="token number">172.18</span>.0.4:6381  <span class="token number">172.18</span>.0.5:6389  <span class="token number">172.18</span>.0.6:6390  <span class="token number">172.18</span>.0.7:6391</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样就启动了6主的集群</p><p>成功输出如下</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Performing <span class="token builtin class-name">hash</span> slots allocation on <span class="token number">6</span> nodes<span class="token punctuation">..</span>.</span>
<span class="line">Master<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> -<span class="token operator">&gt;</span> Slots <span class="token number">0</span> - <span class="token number">2730</span></span>
<span class="line">Master<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> -<span class="token operator">&gt;</span> Slots <span class="token number">2731</span> - <span class="token number">5460</span></span>
<span class="line">Master<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> -<span class="token operator">&gt;</span> Slots <span class="token number">5461</span> - <span class="token number">8191</span></span>
<span class="line">Master<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> -<span class="token operator">&gt;</span> Slots <span class="token number">8192</span> - <span class="token number">10922</span></span>
<span class="line">Master<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> -<span class="token operator">&gt;</span> Slots <span class="token number">10923</span> - <span class="token number">13652</span></span>
<span class="line">Master<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> -<span class="token operator">&gt;</span> Slots <span class="token number">13653</span> - <span class="token number">16383</span></span>
<span class="line">M: e864704c69b0d499ccf0df0a535842d6264fc155 <span class="token number">172.18</span>.0.2:6379</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">0</span>-2730<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">2731</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">M: 5c5c31de4ce188e679c75f2f06b071601ad7918c <span class="token number">172.18</span>.0.3:6380</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">2731</span>-5460<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">2730</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">M: fa1ccf1dd167e88803c034d58a4317f4cffa3f65 <span class="token number">172.18</span>.0.4:6381</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">5461</span>-8191<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">2731</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">M: 6cae96899614140051787475fed7bba92c44a051 <span class="token number">172.18</span>.0.5:6389</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">8192</span>-10922<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">2731</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">M: c96605f204ca4d4c5af6f0e4721b1e53c47c4e82 <span class="token number">172.18</span>.0.6:6390</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">10923</span>-13652<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">2730</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">M: 9a2e098ae80bf1c55a9af765e85354823be3729b <span class="token number">172.18</span>.0.7:6391</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">13653</span>-16383<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">2731</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">Can I <span class="token builtin class-name">set</span> the above configuration? <span class="token punctuation">(</span>type <span class="token string">&#39;yes&#39;</span> to accept<span class="token punctuation">)</span>: <span class="token function">yes</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Nodes configuration updated</span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Assign a different config epoch to each <span class="token function">node</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Sending CLUSTER MEET messages to <span class="token function">join</span> the cluster</span>
<span class="line">Waiting <span class="token keyword">for</span> the cluster to <span class="token function">join</span></span>
<span class="line"><span class="token builtin class-name">.</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Performing Cluster Check <span class="token punctuation">(</span>using <span class="token function">node</span> <span class="token number">172.18</span>.0.2:6379<span class="token punctuation">)</span></span>
<span class="line">M: e864704c69b0d499ccf0df0a535842d6264fc155 <span class="token number">172.18</span>.0.2:6379</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">0</span>-2730<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">2731</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">M: 6cae96899614140051787475fed7bba92c44a051 <span class="token number">172.18</span>.0.5:6389</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">8192</span>-10922<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">2731</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">M: fa1ccf1dd167e88803c034d58a4317f4cffa3f65 <span class="token number">172.18</span>.0.4:6381</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">5461</span>-8191<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">2731</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">M: 5c5c31de4ce188e679c75f2f06b071601ad7918c <span class="token number">172.18</span>.0.3:6380</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">2731</span>-5460<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">2730</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">M: c96605f204ca4d4c5af6f0e4721b1e53c47c4e82 <span class="token number">172.18</span>.0.6:6390</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">10923</span>-13652<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">2730</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">M: 9a2e098ae80bf1c55a9af765e85354823be3729b <span class="token number">172.18</span>.0.7:6391</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">13653</span>-16383<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">2731</span> slots<span class="token punctuation">)</span> master</span>
<span class="line"><span class="token punctuation">[</span>OK<span class="token punctuation">]</span> All nodes agree about slots configuration.</span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Check <span class="token keyword">for</span> <span class="token function">open</span> slots<span class="token punctuation">..</span>.</span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Check slots coverage<span class="token punctuation">..</span>.</span>
<span class="line"><span class="token punctuation">[</span>OK<span class="token punctuation">]</span> All <span class="token number">16384</span> slots covered.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用以下命令,可以创建三主三从的集群模式</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">redis-cli <span class="token parameter variable">--cluster</span> create --cluster-replicas <span class="token number">1</span> <span class="token number">172.18</span>.0.2:6379  <span class="token number">172.18</span>.0.3:6380  <span class="token number">172.18</span>.0.4:6381  <span class="token number">172.18</span>.0.5:6389  <span class="token number">172.18</span>.0.6:6390  <span class="token number">172.18</span>.0.7:6391</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出为以下选项</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">root@cbcc8cc52cf5:/data<span class="token comment"># redis-cli --cluster create --cluster-replicas 1 172.18.0.2:6379  172.18.0.3:6380  172.18.0.4:6381</span></span>
<span class="line"><span class="token number">172.18</span>.0.5:6389  <span class="token number">172.18</span>.0.6:6390  <span class="token number">172.18</span>.0.7:6391</span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Performing <span class="token builtin class-name">hash</span> slots allocation on <span class="token number">6</span> nodes<span class="token punctuation">..</span>.</span>
<span class="line">Master<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> -<span class="token operator">&gt;</span> Slots <span class="token number">0</span> - <span class="token number">5460</span></span>
<span class="line">Master<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> -<span class="token operator">&gt;</span> Slots <span class="token number">5461</span> - <span class="token number">10922</span></span>
<span class="line">Master<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> -<span class="token operator">&gt;</span> Slots <span class="token number">10923</span> - <span class="token number">16383</span></span>
<span class="line">Adding replica <span class="token number">172.18</span>.0.6:6390 to <span class="token number">172.18</span>.0.2:6379</span>
<span class="line">Adding replica <span class="token number">172.18</span>.0.7:6391 to <span class="token number">172.18</span>.0.3:6380</span>
<span class="line">Adding replica <span class="token number">172.18</span>.0.5:6389 to <span class="token number">172.18</span>.0.4:6381</span>
<span class="line">M: 5d16ac1d574e87f2ccaf45cc45560fd4f511a8eb <span class="token number">172.18</span>.0.2:6379</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">0</span>-5460<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">5461</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">M: 45bdaa95be16e620e717b1ceb63ca6b708e76e7e <span class="token number">172.18</span>.0.3:6380</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">5461</span>-10922<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">5462</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">M: c4b7ac2fe95db71f6cb82c735149cdd9042f8498 <span class="token number">172.18</span>.0.4:6381</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">10923</span>-16383<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">5461</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">S: 72af79fec080a8388cbff50a12ee3dd732496361 <span class="token number">172.18</span>.0.5:6389</span>
<span class="line">   replicates c4b7ac2fe95db71f6cb82c735149cdd9042f8498</span>
<span class="line">S: fe7f44662acd2da9a4701f7640a88f04907cacdf <span class="token number">172.18</span>.0.6:6390</span>
<span class="line">   replicates 5d16ac1d574e87f2ccaf45cc45560fd4f511a8eb</span>
<span class="line">S: 4500df1d1000b51d8abec21595e49b3c68b2c20f <span class="token number">172.18</span>.0.7:6391</span>
<span class="line">   replicates 45bdaa95be16e620e717b1ceb63ca6b708e76e7e</span>
<span class="line">Can I <span class="token builtin class-name">set</span> the above configuration? <span class="token punctuation">(</span>type <span class="token string">&#39;yes&#39;</span> to accept<span class="token punctuation">)</span>: <span class="token function">yes</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Nodes configuration updated</span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Assign a different config epoch to each <span class="token function">node</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Sending CLUSTER MEET messages to <span class="token function">join</span> the cluster</span>
<span class="line">Waiting <span class="token keyword">for</span> the cluster to <span class="token function">join</span></span>
<span class="line"><span class="token builtin class-name">.</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Performing Cluster Check <span class="token punctuation">(</span>using <span class="token function">node</span> <span class="token number">172.18</span>.0.2:6379<span class="token punctuation">)</span></span>
<span class="line">M: 5d16ac1d574e87f2ccaf45cc45560fd4f511a8eb <span class="token number">172.18</span>.0.2:6379</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">0</span>-5460<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">5461</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">   <span class="token number">1</span> additional replica<span class="token punctuation">(</span>s<span class="token punctuation">)</span></span>
<span class="line">S: 72af79fec080a8388cbff50a12ee3dd732496361 <span class="token number">172.18</span>.0.5:6389</span>
<span class="line">   slots: <span class="token punctuation">(</span><span class="token number">0</span> slots<span class="token punctuation">)</span> slave</span>
<span class="line">   replicates c4b7ac2fe95db71f6cb82c735149cdd9042f8498</span>
<span class="line">M: 45bdaa95be16e620e717b1ceb63ca6b708e76e7e <span class="token number">172.18</span>.0.3:6380</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">5461</span>-10922<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">5462</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">   <span class="token number">1</span> additional replica<span class="token punctuation">(</span>s<span class="token punctuation">)</span></span>
<span class="line">S: 4500df1d1000b51d8abec21595e49b3c68b2c20f <span class="token number">172.18</span>.0.7:6391</span>
<span class="line">   slots: <span class="token punctuation">(</span><span class="token number">0</span> slots<span class="token punctuation">)</span> slave</span>
<span class="line">   replicates 45bdaa95be16e620e717b1ceb63ca6b708e76e7e</span>
<span class="line">M: c4b7ac2fe95db71f6cb82c735149cdd9042f8498 <span class="token number">172.18</span>.0.4:6381</span>
<span class="line">   slots:<span class="token punctuation">[</span><span class="token number">10923</span>-16383<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token number">5461</span> slots<span class="token punctuation">)</span> master</span>
<span class="line">   <span class="token number">1</span> additional replica<span class="token punctuation">(</span>s<span class="token punctuation">)</span></span>
<span class="line">S: fe7f44662acd2da9a4701f7640a88f04907cacdf <span class="token number">172.18</span>.0.6:6390</span>
<span class="line">   slots: <span class="token punctuation">(</span><span class="token number">0</span> slots<span class="token punctuation">)</span> slave</span>
<span class="line">   replicates 5d16ac1d574e87f2ccaf45cc45560fd4f511a8eb</span>
<span class="line"><span class="token punctuation">[</span>OK<span class="token punctuation">]</span> All nodes agree about slots configuration.</span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Check <span class="token keyword">for</span> <span class="token function">open</span> slots<span class="token punctuation">..</span>.</span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Check slots coverage<span class="token punctuation">..</span>.</span>
<span class="line"><span class="token punctuation">[</span>OK<span class="token punctuation">]</span> All <span class="token number">16384</span> slots covered.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="集群相关操作" tabindex="-1"><a class="header-anchor" href="#集群相关操作"><span>集群相关操作</span></a></h4><h5 id="卡槽" tabindex="-1"><a class="header-anchor" href="#卡槽"><span>卡槽</span></a></h5><p>集群一共有16384个卡槽,一个卡槽存储一个key,</p><p>进入任意一个redis-cli -c -p 6379</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> k1 v1</span>
<span class="line">-<span class="token operator">&gt;</span> Redirected to slot <span class="token punctuation">[</span><span class="token number">12706</span><span class="token punctuation">]</span> located at <span class="token number">172.18</span>.0.4:6381</span>
<span class="line">OK</span>
<span class="line"><span class="token number">172.18</span>.0.4:638<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> get k1</span>
<span class="line"><span class="token string">&quot;v1&quot;</span></span>
<span class="line"><span class="token number">172.18</span>.0.4:638<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> <span class="token builtin class-name">set</span> k2 v2</span>
<span class="line">-<span class="token operator">&gt;</span> Redirected to slot <span class="token punctuation">[</span><span class="token number">449</span><span class="token punctuation">]</span> located at <span class="token number">172.18</span>.0.2:6379</span>
<span class="line">OK</span>
<span class="line"><span class="token number">172.18</span>.0.2:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get k1</span>
<span class="line">-<span class="token operator">&gt;</span> Redirected to slot <span class="token punctuation">[</span><span class="token number">12706</span><span class="token punctuation">]</span> located at <span class="token number">172.18</span>.0.4:6381</span>
<span class="line"><span class="token string">&quot;v1&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用set指令会有一个相关算法计算key的卡槽值,如果当前的key不在当前的服务器,就会跳到key所在的服务器当中</p><h5 id="多个key和value" tabindex="-1"><a class="header-anchor" href="#多个key和value"><span>多个key和value</span></a></h5><p>并且不支持一下设置多个key和value,例如</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token number">172.18</span>.0.4:638<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> mset k3 v3 k4 v4</span>
<span class="line"><span class="token punctuation">(</span>error<span class="token punctuation">)</span> CROSSSLOT Keys <span class="token keyword">in</span> request don&#39;t <span class="token builtin class-name">hash</span> to the same slot</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>只能使用另一种方式,以组的形式进行多个key和value的设置</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token number">172.18</span>.0.4:638<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span> mset k3<span class="token punctuation">{</span>user<span class="token punctuation">}</span> v3 k4<span class="token punctuation">{</span>user<span class="token punctuation">}</span> v4</span>
<span class="line">-<span class="token operator">&gt;</span> Redirected to slot <span class="token punctuation">[</span><span class="token number">5474</span><span class="token punctuation">]</span> located at <span class="token number">172.18</span>.0.3:6380</span>
<span class="line">OK</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="参看结点情况" tabindex="-1"><a class="header-anchor" href="#参看结点情况"><span>参看结点情况</span></a></h5><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> cluster nodes</span>
<span class="line">72af79fec080a8388cbff50a12ee3dd732496361 <span class="token number">172.18</span>.0.5:6389@16389 slave c4b7ac2fe95db71f6cb82c735149cdd9042f8498 <span class="token number">0</span> <span class="token number">1650433619000</span> <span class="token number">3</span> connected</span>
<span class="line">45bdaa95be16e620e717b1ceb63ca6b708e76e7e <span class="token number">172.18</span>.0.3:6380@16380 master - <span class="token number">0</span> <span class="token number">1650433619534</span> <span class="token number">2</span> connected <span class="token number">5461</span>-10922</span>
<span class="line">5d16ac1d574e87f2ccaf45cc45560fd4f511a8eb <span class="token number">172.18</span>.0.2:6379@16379 myself,master - <span class="token number">0</span> <span class="token number">1650433619000</span> <span class="token number">1</span> connected <span class="token number">0</span>-5460</span>
<span class="line">4500df1d1000b51d8abec21595e49b3c68b2c20f <span class="token number">172.18</span>.0.7:6391@16391 slave 45bdaa95be16e620e717b1ceb63ca6b708e76e7e <span class="token number">0</span> <span class="token number">1650433619433</span> <span class="token number">2</span> connected</span>
<span class="line">c4b7ac2fe95db71f6cb82c735149cdd9042f8498 <span class="token number">172.18</span>.0.4:6381@16381 master - <span class="token number">0</span> <span class="token number">1650433618528</span> <span class="token number">3</span> connected <span class="token number">10923</span>-16383</span>
<span class="line">fe7f44662acd2da9a4701f7640a88f04907cacdf <span class="token number">172.18</span>.0.6:6390@16390 slave 5d16ac1d574e87f2ccaf45cc45560fd4f511a8eb <span class="token number">0</span> <span class="token number">1650433620439</span> <span class="token number">1</span> connected</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以查看结点的情况,包括各主从服务器以及卡槽的分布</p><h5 id="其他指令" tabindex="-1"><a class="header-anchor" href="#其他指令"><span>其他指令</span></a></h5><p><img src="https://s2.loli.net/2022/04/27/89QjpHK1amIk5Vg.png" alt="image-20220420141852053"></p><h5 id="故障恢复" tabindex="-1"><a class="header-anchor" href="#故障恢复"><span>故障恢复</span></a></h5><p>如果主服务器消失,那么从机将会顶替成为主服务器,并且如果主服务器再次启动后,以前的主服务器会变为从服务器</p><p>主服务器消失后,从服务器替代</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">5d16ac1d574e87f2ccaf45cc45560fd4f511a8eb <span class="token number">172.18</span>.0.2:6379@16379 master,fail - <span class="token number">1650435645520</span> <span class="token number">1650435643000</span> <span class="token number">1</span> connected</span>
<span class="line">72af79fec080a8388cbff50a12ee3dd732496361 <span class="token number">172.18</span>.0.5:6389@16389 slave c4b7ac2fe95db71f6cb82c735149cdd9042f8498 <span class="token number">0</span> <span class="token number">1650435675995</span> <span class="token number">3</span> connected</span>
<span class="line">fe7f44662acd2da9a4701f7640a88f04907cacdf <span class="token number">172.18</span>.0.6:6390@16390 master - <span class="token number">0</span> <span class="token number">1650435676598</span> <span class="token number">7</span> connected <span class="token number">0</span>-5460</span>
<span class="line">4500df1d1000b51d8abec21595e49b3c68b2c20f <span class="token number">172.18</span>.0.7:6391@16391 slave 45bdaa95be16e620e717b1ceb63ca6b708e76e7e <span class="token number">0</span> <span class="token number">1650435677001</span> <span class="token number">2</span> connected</span>
<span class="line">45bdaa95be16e620e717b1ceb63ca6b708e76e7e <span class="token number">172.18</span>.0.3:6380@16380 myself,master - <span class="token number">0</span> <span class="token number">1650435675000</span> <span class="token number">2</span> connected <span class="token number">5461</span>-10922</span>
<span class="line">c4b7ac2fe95db71f6cb82c735149cdd9042f8498 <span class="token number">172.18</span>.0.4:6381@16381 master - <span class="token number">0</span> <span class="token number">1650435676000</span> <span class="token number">3</span> connected <span class="token number">10923</span>-16383</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>主服务器重启后</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">5d16ac1d574e87f2ccaf45cc45560fd4f511a8eb <span class="token number">172.18</span>.0.2:6379@16379 slave fe7f44662acd2da9a4701f7640a88f04907cacdf <span class="token number">0</span> <span class="token number">1650435775575</span> <span class="token number">7</span> connected</span>
<span class="line">72af79fec080a8388cbff50a12ee3dd732496361 <span class="token number">172.18</span>.0.5:6389@16389 slave c4b7ac2fe95db71f6cb82c735149cdd9042f8498 <span class="token number">0</span> <span class="token number">1650435776580</span> <span class="token number">3</span> connected</span>
<span class="line">fe7f44662acd2da9a4701f7640a88f04907cacdf <span class="token number">172.18</span>.0.6:6390@16390 master - <span class="token number">0</span> <span class="token number">1650435776580</span> <span class="token number">7</span> connected <span class="token number">0</span>-5460</span>
<span class="line">4500df1d1000b51d8abec21595e49b3c68b2c20f <span class="token number">172.18</span>.0.7:6391@16391 slave 45bdaa95be16e620e717b1ceb63ca6b708e76e7e <span class="token number">0</span> <span class="token number">1650435775000</span> <span class="token number">2</span> connected</span>
<span class="line">45bdaa95be16e620e717b1ceb63ca6b708e76e7e <span class="token number">172.18</span>.0.3:6380@16380 myself,master - <span class="token number">0</span> <span class="token number">1650435775000</span> <span class="token number">2</span> connected <span class="token number">5461</span>-10922</span>
<span class="line">c4b7ac2fe95db71f6cb82c735149cdd9042f8498 <span class="token number">172.18</span>.0.4:6381@16381 master - <span class="token number">0</span> <span class="token number">1650435776077</span> <span class="token number">3</span> connected <span class="token number">10923</span>-16383</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果主服务器和从服务器一起消失,那么会根据redis.conf中的cluster-require-full-coverage是yes还是no,如果是yes,那么整个集群都消失,反之,集群中的其他服务器仍然能够运行</p><h2 id="redis常见问题及解决" tabindex="-1"><a class="header-anchor" href="#redis常见问题及解决"><span>Redis常见问题及解决</span></a></h2><h3 id="redis缓存穿透" tabindex="-1"><a class="header-anchor" href="#redis缓存穿透"><span>Redis缓存穿透</span></a></h3><p><img src="https://s2.loli.net/2022/04/27/8nfYX62NTcjxRIG.png" alt="image-20220420203208085"></p><h4 id="造成原因" tabindex="-1"><a class="header-anchor" href="#造成原因"><span>造成原因</span></a></h4><ol><li>服务器压力过大</li><li>每次都是新数据,在redis中没有缓存,redis缓存命中率低</li><li>频繁访问数据库,造成数据库压力过大</li></ol><h4 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法"><span>解决方法</span></a></h4><ol><li><p>在redis缓存设置空数据,如果访问数据库时,没有查询到数据,这个时候就对空结果进行缓存,并设置比较短的过期时间.</p></li><li><p>使用redis的bitmap,类似于白名单,将可以访问的用户id存储,每次访问的时候就与bitmap中的id比较,如果不相同就进行拦截</p></li><li><p>采用布隆过滤器,底层与bitmap类似</p><p><img src="https://s2.loli.net/2022/04/27/fbvj924qIXHCgDO.png" alt="image-20220420202838109"><img src="https://s2.loli.net/2022/04/27/4ZoMKiIFwka1tmC.png" alt="image-20220420203001035"></p></li><li><p>实际监控,建立黑名单</p></li></ol><h3 id="redis缓存击穿" tabindex="-1"><a class="header-anchor" href="#redis缓存击穿"><span>Redis缓存击穿</span></a></h3><h4 id="造成原因-1" tabindex="-1"><a class="header-anchor" href="#造成原因-1"><span>造成原因</span></a></h4><p><img src="https://s2.loli.net/2022/04/27/Cz7N3i5eGuYmAjW.png" alt="image-20220420203913522"></p><h4 id="解决方法-1" tabindex="-1"><a class="header-anchor" href="#解决方法-1"><span>解决方法</span></a></h4><ol><li>提前设置热点数据的key,延长时间</li><li>实时监控数据,延长时间</li><li>利用锁,在数据过期时,设置排它锁,如果有线程查询这个key就同步这个缓存,再次等待过期,一直循环,直到没有线程查询key了,就删除这个缓存</li></ol><h3 id="redis缓存雪崩" tabindex="-1"><a class="header-anchor" href="#redis缓存雪崩"><span>Redis缓存雪崩</span></a></h3><h4 id="造成原因-2" tabindex="-1"><a class="header-anchor" href="#造成原因-2"><span>造成原因</span></a></h4><p><img src="https://s2.loli.net/2022/04/27/dMgk2iXIyAYtZSb.png" alt="image-20220420205001832"></p><h4 id="解决方法-2" tabindex="-1"><a class="header-anchor" href="#解决方法-2"><span>解决方法</span></a></h4><ol><li>设置多级缓存机制 redis缓存+nginx缓存+ehcache缓存等</li><li>使用锁和队列,控制对数据库的访问,不适合高并发</li><li>分开设置缓存过期时间</li><li>设置缓存更新标志,如果缓存过期了,启动线程重新拿数据</li></ol><h2 id="分布式锁" tabindex="-1"><a class="header-anchor" href="#分布式锁"><span>分布式锁</span></a></h2><blockquote><p>在分布式集群中,一台机器上的锁不能在其他机器上使用</p></blockquote><p><img src="https://s2.loli.net/2022/04/27/dVpXHYSnLFlgmPo.png" alt="image-20220420210725939"></p><h3 id="基于redis分布锁" tabindex="-1"><a class="header-anchor" href="#基于redis分布锁"><span>基于redis分布锁</span></a></h3><p>使用命令</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">setnx k1 v1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>可以实现加锁,这样其他就不能对其进行再次操作</p><p>删除锁使用</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">del k1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>防止死锁expire设置过期时间</p><p>同时为了方式上锁之后不能及时设置过期时间,所以上锁和设置过期时间同步进行</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token builtin class-name">set</span> k1 v1 nx ex <span class="token number">10</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="问题1" tabindex="-1"><a class="header-anchor" href="#问题1"><span>问题1</span></a></h3><blockquote><p>a先对key进行上锁处理,然后实行具体操作,然后在这个时候服务器卡顿,此时因为设置了10秒过期时间,锁会自动释放,这个时候b抢到了锁,然后b实行具体操作,这个时候a服务器反应过来,于是继续执行操作,并且执行完之后将b拿到的锁释放</p></blockquote><p>使用java中的uuid解决</p><p><img src="https://s2.loli.net/2022/04/27/mLHKdN7CogXlM9x.png" alt="image-20220421103353638"></p><h3 id="问题2" tabindex="-1"><a class="header-anchor" href="#问题2"><span>问题2</span></a></h3><blockquote><p>原子性问题</p></blockquote><p>使用LUA脚本解决</p><p><img src="https://s2.loli.net/2022/04/27/bK2ioJLYRuNsDZ9.png" alt="image-20220421103451902"></p>`,212)]))}const o=n(l,[["render",i]]),r=JSON.parse('{"path":"/202306%E7%A7%8B%E6%8B%9B%E5%87%86%E5%A4%87-%E6%97%A7/b-1Redis.html","title":"Redis","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"常见的Nosql数据库","slug":"常见的nosql数据库","link":"#常见的nosql数据库","children":[]},{"level":2,"title":"Redis底层原理","slug":"redis底层原理","link":"#redis底层原理","children":[{"level":3,"title":"单线程加多路复用技术","slug":"单线程加多路复用技术","link":"#单线程加多路复用技术","children":[]}]},{"level":2,"title":"Redis常用操作命令","slug":"redis常用操作命令","link":"#redis常用操作命令","children":[{"level":3,"title":"key操作命令","slug":"key操作命令","link":"#key操作命令","children":[]},{"level":3,"title":"数据库操作","slug":"数据库操作","link":"#数据库操作","children":[]}]},{"level":2,"title":"Redis五大数据类型","slug":"redis五大数据类型","link":"#redis五大数据类型","children":[{"level":3,"title":"1. String","slug":"_1-string","link":"#_1-string","children":[]},{"level":3,"title":"2.其他数据类型","slug":"_2-其他数据类型","link":"#_2-其他数据类型","children":[]}]},{"level":2,"title":"新增的三种数据类型","slug":"新增的三种数据类型","link":"#新增的三种数据类型","children":[{"level":3,"title":"BitMap","slug":"bitmap","link":"#bitmap","children":[]},{"level":3,"title":"HyperLogLog","slug":"hyperloglog","link":"#hyperloglog","children":[]},{"level":3,"title":"Geospaatial","slug":"geospaatial","link":"#geospaatial","children":[]}]},{"level":2,"title":"Redis事务和锁机制","slug":"redis事务和锁机制","link":"#redis事务和锁机制","children":[{"level":3,"title":"Multi, Exec,Discard","slug":"multi-exec-discard","link":"#multi-exec-discard","children":[]},{"level":3,"title":"事务的错误处理","slug":"事务的错误处理","link":"#事务的错误处理","children":[]},{"level":3,"title":"事务的冲突问题","slug":"事务的冲突问题","link":"#事务的冲突问题","children":[]},{"level":3,"title":"事务的乐观锁命令操作","slug":"事务的乐观锁命令操作","link":"#事务的乐观锁命令操作","children":[]},{"level":3,"title":"redis事务的三大特性","slug":"redis事务的三大特性","link":"#redis事务的三大特性","children":[]}]},{"level":2,"title":"Redis事务实例:秒杀","slug":"redis事务实例-秒杀","link":"#redis事务实例-秒杀","children":[{"level":3,"title":"代码","slug":"代码","link":"#代码","children":[]},{"level":3,"title":"问题","slug":"问题","link":"#问题","children":[]}]},{"level":2,"title":"Redis的持久化操作","slug":"redis的持久化操作","link":"#redis的持久化操作","children":[{"level":3,"title":"1. RDB","slug":"_1-rdb","link":"#_1-rdb","children":[]},{"level":3,"title":"2. AOF","slug":"_2-aof","link":"#_2-aof","children":[]}]},{"level":2,"title":"Redis主从复制","slug":"redis主从复制","link":"#redis主从复制","children":[{"level":3,"title":"复制原理","slug":"复制原理","link":"#复制原理","children":[]},{"level":3,"title":"设置服务:windows下","slug":"设置服务-windows下","link":"#设置服务-windows下","children":[]},{"level":3,"title":"一主多从","slug":"一主多从","link":"#一主多从","children":[]},{"level":3,"title":"常用操作","slug":"常用操作","link":"#常用操作","children":[]},{"level":3,"title":"哨兵机制","slug":"哨兵机制","link":"#哨兵机制","children":[]}]},{"level":2,"title":"Redis集群操作","slug":"redis集群操作","link":"#redis集群操作","children":[{"level":3,"title":"问题","slug":"问题-1","link":"#问题-1","children":[]},{"level":3,"title":"主机代理模式","slug":"主机代理模式","link":"#主机代理模式","children":[]},{"level":3,"title":"无中心集群方式","slug":"无中心集群方式","link":"#无中心集群方式","children":[]},{"level":3,"title":"集群设置","slug":"集群设置","link":"#集群设置","children":[]}]},{"level":2,"title":"Redis常见问题及解决","slug":"redis常见问题及解决","link":"#redis常见问题及解决","children":[{"level":3,"title":"Redis缓存穿透","slug":"redis缓存穿透","link":"#redis缓存穿透","children":[]},{"level":3,"title":"Redis缓存击穿","slug":"redis缓存击穿","link":"#redis缓存击穿","children":[]},{"level":3,"title":"Redis缓存雪崩","slug":"redis缓存雪崩","link":"#redis缓存雪崩","children":[]}]},{"level":2,"title":"分布式锁","slug":"分布式锁","link":"#分布式锁","children":[{"level":3,"title":"基于redis分布锁","slug":"基于redis分布锁","link":"#基于redis分布锁","children":[]},{"level":3,"title":"问题1","slug":"问题1","link":"#问题1","children":[]},{"level":3,"title":"问题2","slug":"问题2","link":"#问题2","children":[]}]}],"git":{"updatedTime":1751969860000,"contributors":[{"name":"Full","username":"Full","email":"2285288446@qq.com","commits":2,"url":"https://github.com/Full"}],"changelog":[{"hash":"d9f3e89ac0c7f9658e85d517b2e341155ebeb4a4","time":1751969860000,"email":"2285288446@qq.com","author":"Full","message":"构建修复"},{"hash":"46fbbb649a2b30164a6d253dd0f5cfcdf1657353","time":1751960301000,"email":"2285288446@qq.com","author":"Full","message":"第一次添加内容"}]},"filePathRelative":"202306秋招准备-旧/b-1Redis.md"}');export{o as comp,r as data};
