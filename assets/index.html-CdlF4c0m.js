import{_ as e,c as s,d as l,o as n}from"./app-cTT5GjTp.js";const a={};function i(d,t){return n(),s("div",null,t[0]||(t[0]=[l(`<h1 id="🚀-java高级开发面试冲刺计划-4周版-每日6-8h" tabindex="-1"><a class="header-anchor" href="#🚀-java高级开发面试冲刺计划-4周版-每日6-8h"><span>🚀 Java高级开发面试冲刺计划 (4周版 | 每日6-8h)</span></a></h1><p><strong>作者</strong>：DeepSeek-R1 <strong>最后更新</strong>：2025年7月15日</p><blockquote><p><strong>核心策略</strong>： 🔹 每日源码精读 + 手写核心组件 🔹 高频面试题驱动学习 🔹 真实场景项目实战 🔹 早晚模拟面试训练</p></blockquote><h2 id="📚-详细学习路线-按周分解" tabindex="-1"><a class="header-anchor" href="#📚-详细学习路线-按周分解"><span>📚 详细学习路线（按周分解）</span></a></h2><h3 id="⚙-第一周-java核心深度爆破-重点-底层原理" tabindex="-1"><a class="header-anchor" href="#⚙-第一周-java核心深度爆破-重点-底层原理"><span>⚙ 第一周：Java核心深度爆破（重点：底层原理）</span></a></h3><p><strong>核心目标</strong>：掌握集合/并发/JVM原理，能手写核心数据结构</p><h4 id="每日学习任务" tabindex="-1"><a class="header-anchor" href="#每日学习任务"><span>每日学习任务：</span></a></h4><table><thead><tr><th style="text-align:left;">天数</th><th style="text-align:left;">核心模块</th><th style="text-align:left;">具体学习项</th><th style="text-align:left;">产出物</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;"><strong>HashMap</strong></td><td style="text-align:left;">- JDK7 vs JDK8实现差异 - 哈希冲突解决方案 - 扩容机制源码分析 - 手写带LRU淘汰的Map</td><td style="text-align:left;">手写LRUCache.java</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;"><strong>Concurrent</strong></td><td style="text-align:left;">- 分段锁到CAS+synchronized演进 - 1.8源码逐行分析 - 对比HashTable/Collections.synchronizedMap</td><td style="text-align:left;">ConcurrentHashMap流程图</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;"><strong>线程池</strong></td><td style="text-align:left;">- ThreadPoolExecutor参数详解 - 工作流程源码跟踪 - 四种拒绝策略实战 - 手写简化版线程池</td><td style="text-align:left;">MyThreadPool.java</td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;"><strong>AQS</strong></td><td style="text-align:left;">- ReentrantLock加锁流程 - Condition实现原理 - 手写简化版ReentrantLock</td><td style="text-align:left;">MyReentrantLock.java</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;"><strong>JVM内存</strong></td><td style="text-align:left;">- 堆内存分区实战（jhsdb） - 栈帧结构分析 - 方法区（元空间）监控 - OOM场景复现</td><td style="text-align:left;">内存结构手绘图</td></tr><tr><td style="text-align:left;">6</td><td style="text-align:left;"><strong>GC机制</strong></td><td style="text-align:left;">- G1收集器原理（SATB/RSet） - CMS vs G1对比 - ZGC内存屏障原理 - GC日志分析实战</td><td style="text-align:left;">GC调优方案文档</td></tr><tr><td style="text-align:left;">7</td><td style="text-align:left;"><strong>类加载</strong></td><td style="text-align:left;">- 双亲委派源码跟踪 - 打破委派场景（Tomcat/JDBC） - 自定义类加载器实战</td><td style="text-align:left;">MyClassLoader.java</td></tr></tbody></table><p><strong>必备工具</strong>：</p><p>bash</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line"># JVM分析工具链</span>
<span class="line">jhsdb jmap --heap --pid &lt;PID&gt;          # 查看堆内存</span>
<span class="line">jcmd &lt;PID&gt; GC.heap_dump /tmp/dump.hprof # 生成堆转储</span>
<span class="line">arthas watch *Service * &#39;{params,returnObj}&#39; -x 3 # 方法监控</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="🗄-第二周-数据库与orm暴击-重点-mysql-mybatis" tabindex="-1"><a class="header-anchor" href="#🗄-第二周-数据库与orm暴击-重点-mysql-mybatis"><span>🗄 第二周：数据库与ORM暴击（重点：MySQL+MyBatis）</span></a></h3><p><strong>核心目标</strong>：精通SQL优化/事务原理，掌握MyBatis插件开发</p><h4 id="每日学习任务-1" tabindex="-1"><a class="header-anchor" href="#每日学习任务-1"><span>每日学习任务：</span></a></h4><table><thead><tr><th style="text-align:left;">天数</th><th style="text-align:left;">核心模块</th><th style="text-align:left;">具体学习项</th><th style="text-align:left;">产出物</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;"><strong>SQL优化</strong></td><td style="text-align:left;">- EXPLAIN执行计划详解 - 索引失效场景实验 - 覆盖索引/下推优化实战 - 慢查询日志分析</td><td style="text-align:left;">SQL优化报告.docx</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;"><strong>InnoDB存储</strong></td><td style="text-align:left;">- B+树索引原理手绘 - 缓冲池管理机制 - Change Buffer工作原理 - 页分裂实验</td><td style="text-align:left;">B+树结构图</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;"><strong>事务隔离</strong></td><td style="text-align:left;">- MVCC实现原理（ReadView） - 幻读解决方案实验 - 间隙锁/临键锁死锁复现</td><td style="text-align:left;">事务隔离演示SQL脚本</td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;"><strong>Redo/Undo</strong></td><td style="text-align:left;">- WAL机制深度解析 - 崩溃恢复流程分析 - 两阶段提交实战</td><td style="text-align:left;">事务日志流程图</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;"><strong>MyBatis核心</strong></td><td style="text-align:left;">- SqlSessionFactory构建过程 - 一级/二级缓存源码跟踪 - 与Spring整合原理</td><td style="text-align:left;">缓存机制时序图</td></tr><tr><td style="text-align:left;">6</td><td style="text-align:left;"><strong>MyBatis插件</strong></td><td style="text-align:left;">- Interceptor链调用流程 - 手写SQL执行时间统计插件 - PageHelper原理分析</td><td style="text-align:left;">SqlCostInterceptor.java</td></tr><tr><td style="text-align:left;">7</td><td style="text-align:left;"><strong>多数据源</strong></td><td style="text-align:left;">- 动态数据源实现方案 - Sharding-JDBC分表实战 - 读写分离配置</td><td style="text-align:left;">DynamicDataSourceConfig.java</td></tr></tbody></table><p><strong>实战实验</strong>：</p><p>sql</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">/* 死锁场景复现 */</span>
<span class="line">-- Session 1</span>
<span class="line">START TRANSACTION;</span>
<span class="line">UPDATE accounts SET balance = balance - 100 WHERE id = 1;</span>
<span class="line"></span>
<span class="line">-- Session 2</span>
<span class="line">START TRANSACTION;</span>
<span class="line">UPDATE accounts SET balance = balance - 100 WHERE id = 2;</span>
<span class="line"></span>
<span class="line">-- Session 1</span>
<span class="line">UPDATE accounts SET balance = balance + 100 WHERE id = 2; -- 等待锁</span>
<span class="line"></span>
<span class="line">-- Session 2</span>
<span class="line">UPDATE accounts SET balance = balance + 100 WHERE id = 1; -- 死锁发生</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="🍃-第三周-spring生态源码穿透-重点-ioc-aop" tabindex="-1"><a class="header-anchor" href="#🍃-第三周-spring生态源码穿透-重点-ioc-aop"><span>🍃 第三周：Spring生态源码穿透（重点：IOC/AOP）</span></a></h3><p><strong>核心目标</strong>：深入Spring容器原理，掌握自动配置机制</p><h4 id="每日学习任务-2" tabindex="-1"><a class="header-anchor" href="#每日学习任务-2"><span>每日学习任务：</span></a></h4><table><thead><tr><th style="text-align:left;">天数</th><th style="text-align:left;">核心模块</th><th style="text-align:left;">具体学习项</th><th style="text-align:left;">产出物</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;"><strong>Bean生命周期</strong></td><td style="text-align:left;">- InstantiationAwareBeanPostProcessor作用 - 初始化/销毁流程源码跟踪 - 循环依赖解决（三级缓存）</td><td style="text-align:left;">Bean生命周期时序图</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;"><strong>依赖注入</strong></td><td style="text-align:left;">- @Autowired查找流程 - @Resource与@Inject对比 - 条件装配(@Conditional)实战</td><td style="text-align:left;">DI注入流程图</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;"><strong>AOP原理</strong></td><td style="text-align:left;">- JDK动态代理字节码分析 - CGLIB代理原理 - Advice执行顺序控制 - 手写简易AOP框架</td><td style="text-align:left;">MyAopProxy.java</td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;"><strong>事务管理</strong></td><td style="text-align:left;">- @Transactional失效场景分析 - 传播行为源码跟踪 - 事务同步管理器原理</td><td style="text-align:left;">事务传播机制演示代码</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;"><strong>SpringBoot启动</strong></td><td style="text-align:left;">- 启动事件发布流程 - 自动配置加载机制（spring.factories） - 嵌入式容器原理</td><td style="text-align:left;">启动流程脑图</td></tr><tr><td style="text-align:left;">6</td><td style="text-align:left;"><strong>Starter开发</strong></td><td style="text-align:left;">- 自定义Starter步骤 - @Enable模块驱动编程 - 自动配置条件判断实战</td><td style="text-align:left;">my-redis-starter项目</td></tr><tr><td style="text-align:left;">7</td><td style="text-align:left;"><strong>Actuator扩展</strong></td><td style="text-align:left;">- 健康检查定制开发 - 指标监控集成Prometheus - 自定义Endpoint开发</td><td style="text-align:left;">SystemInfoEndpoint.java</td></tr></tbody></table><p><strong>高频面试题实战</strong>：</p><p>java</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">// 为什么@Async方法需要代理调用？</span>
<span class="line">@Service</span>
<span class="line">public class TaskService {</span>
<span class="line">    @Async</span>
<span class="line">    public void asyncTask() { /* 异步执行 */ }</span>
<span class="line">    </span>
<span class="line">    public void callAsync() {</span>
<span class="line">        this.asyncTask(); // 失效！应该通过代理对象调用</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="⚡-第四周-分布式与系统设计-重点-redis-系统架构" tabindex="-1"><a class="header-anchor" href="#⚡-第四周-分布式与系统设计-重点-redis-系统架构"><span>⚡ 第四周：分布式与系统设计（重点：Redis+系统架构）</span></a></h3><p><strong>核心目标</strong>：掌握分布式解决方案，能设计高并发系统</p><h4 id="每日学习任务-3" tabindex="-1"><a class="header-anchor" href="#每日学习任务-3"><span>每日学习任务：</span></a></h4><table><thead><tr><th style="text-align:left;">天数</th><th style="text-align:left;">核心模块</th><th style="text-align:left;">具体学习项</th><th style="text-align:left;">产出物</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;"><strong>Redis数据结构</strong></td><td style="text-align:left;">- HyperLogLog基数统计实战 - Stream消息队列应用 - GEO位置计算</td><td style="text-align:left;">UV统计Demo.java</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;"><strong>Redis持久化</strong></td><td style="text-align:left;">- RDB/AOF混合配置 - 管道技术性能测试 - 内存淘汰策略对比</td><td style="text-align:left;">持久化配置对比表</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;"><strong>Redis集群</strong></td><td style="text-align:left;">- 数据分片方案（CRC16） - 主从切换实验 - 集群扩缩容操作</td><td style="text-align:left;">Cluster节点拓扑图</td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;"><strong>Kafka核心</strong></td><td style="text-align:left;">- 副本选举机制 - ISR集合维护 - 幂等生产者实现 - 事务消息实战</td><td style="text-align:left;">消息可靠性保障方案</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;"><strong>分布式ID</strong></td><td style="text-align:left;">- Snowflake算法实现 - 时钟回拨解决方案 - Leaf-segment方案对比</td><td style="text-align:left;">SnowflakeGenerator.java</td></tr><tr><td style="text-align:left;">6</td><td style="text-align:left;"><strong>系统设计</strong></td><td style="text-align:left;">- 短链系统设计（发号/存储/跳转） - 秒杀架构（分层削峰/库存扣减）</td><td style="text-align:left;">系统架构图（draw.io）</td></tr><tr><td style="text-align:left;">7</td><td style="text-align:left;"><strong>云原生</strong></td><td style="text-align:left;">- Dockerfile编写最佳实践 - K8S部署Spring Boot应用 - Helm chart管理</td><td style="text-align:left;">deployment.yaml模板</td></tr></tbody></table><p><strong>分布式ID实战</strong>：</p><p>java</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">public class SnowflakeGenerator {</span>
<span class="line">    private long sequence = 0;</span>
<span class="line">    private long lastTimestamp = -1;</span>
<span class="line"></span>
<span class="line">    public synchronized long nextId() {</span>
<span class="line">        long timestamp = timeGen();</span>
<span class="line">        if (timestamp &lt; lastTimestamp) {</span>
<span class="line">            timestamp = handleClockDrift(lastTimestamp);</span>
<span class="line">        }</span>
<span class="line">        if (timestamp == lastTimestamp) {</span>
<span class="line">            sequence = (sequence + 1) &amp; SEQUENCE_MASK;</span>
<span class="line">            if (sequence == 0) timestamp = tilNextMillis(lastTimestamp);</span>
<span class="line">        } else sequence = 0;</span>
<span class="line">        lastTimestamp = timestamp;</span>
<span class="line">        return ((timestamp - EPOCH) &lt;&lt; TIMESTAMP_SHIFT)</span>
<span class="line">                | (WORKER_ID &lt;&lt; WORKER_SHIFT)</span>
<span class="line">                | sequence;</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="🔥-最终面试冲刺-最后3天" tabindex="-1"><a class="header-anchor" href="#🔥-最终面试冲刺-最后3天"><span>🔥 最终面试冲刺（最后3天）</span></a></h2><h3 id="每日行动计划" tabindex="-1"><a class="header-anchor" href="#每日行动计划"><span>每日行动计划</span></a></h3><table><thead><tr><th style="text-align:left;">时间段</th><th style="text-align:left;">任务</th><th style="text-align:left;">具体行动</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>上午</strong></td><td style="text-align:left;">项目难点梳理</td><td style="text-align:left;">提炼3个技术亮点（如：秒杀系统QPS从500-&gt;5000优化过程）</td></tr><tr><td style="text-align:left;"><strong>下午</strong></td><td style="text-align:left;">系统设计训练</td><td style="text-align:left;">设计：1）微博Feed流 2）打车派单系统 3）分布式配置中心</td></tr><tr><td style="text-align:left;"><strong>晚上</strong></td><td style="text-align:left;">全真模拟面试</td><td style="text-align:left;">使用腾讯会议录制，重点复盘： - 技术表达清晰度 - 八股文深度 - 代码白板书写</td></tr></tbody></table><h3 id="行为问题准备清单" tabindex="-1"><a class="header-anchor" href="#行为问题准备清单"><span>行为问题准备清单</span></a></h3><p>markdown</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">1. 离职原因：  </span>
<span class="line">   &quot;在上一段工作中积累了XX经验，现在希望深入分布式/高并发领域，  </span>
<span class="line">   而贵司在[具体业务]的场景正是我期待挑战的方向&quot;</span>
<span class="line"></span>
<span class="line">2. 项目难点：  </span>
<span class="line">   &quot;在XX项目中遇到[具体问题]，通过[技术方案]解决，  </span>
<span class="line">   使[指标]提升X%，关键收获是[技术洞察]&quot;</span>
<span class="line"></span>
<span class="line">3. 职业规划：  </span>
<span class="line">   &quot;1年内成为微服务领域专家，3年内具备架构师全局视野&quot;  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="📦-高效学习工具包" tabindex="-1"><a class="header-anchor" href="#📦-高效学习工具包"><span>📦 高效学习工具包</span></a></h2><p>bash</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line"># 诊断分析</span>
<span class="line">- JVM：Arthas + jol-core</span>
<span class="line">- 网络：Wireshark + tcpdump</span>
<span class="line">- 性能：JMeter@5.5 + wrk</span>
<span class="line"></span>
<span class="line"># 知识管理</span>
<span class="line">- 笔记：Obsidian + Mermaid插件</span>
<span class="line">- 绘图：draw.io / Excalidraw</span>
<span class="line">- 代码片段：carbon.now.sh</span>
<span class="line"></span>
<span class="line"># 环境准备</span>
<span class="line">- JDK：GraalVM 21（性能分析）</span>
<span class="line">- 数据库：MySQL 8.0 + Redis 7.0</span>
<span class="line">- 消息队列：Kafka 3.5（KRaft模式）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>进度标记建议</strong>： ✅ 已完成 | 🔶 进行中 | ❗ 遇到困难 每日睡前更新：<a href="https://gist.github.com/" target="_blank" rel="noopener noreferrer">GitHub Gist</a> 或本地笔记</p></blockquote>`,47)]))}const c=e(a,[["render",i]]),p=JSON.parse('{"path":"/202507%E7%A4%BE%E6%8B%9B%E5%87%86%E5%A4%87/","title":"🚀 Java高级开发面试冲刺计划 (4周版 | 每日6-8h)","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"📚 详细学习路线（按周分解）","slug":"📚-详细学习路线-按周分解","link":"#📚-详细学习路线-按周分解","children":[{"level":3,"title":"⚙ 第一周：Java核心深度爆破（重点：底层原理）","slug":"⚙-第一周-java核心深度爆破-重点-底层原理","link":"#⚙-第一周-java核心深度爆破-重点-底层原理","children":[]},{"level":3,"title":"🗄 第二周：数据库与ORM暴击（重点：MySQL+MyBatis）","slug":"🗄-第二周-数据库与orm暴击-重点-mysql-mybatis","link":"#🗄-第二周-数据库与orm暴击-重点-mysql-mybatis","children":[]},{"level":3,"title":"🍃 第三周：Spring生态源码穿透（重点：IOC/AOP）","slug":"🍃-第三周-spring生态源码穿透-重点-ioc-aop","link":"#🍃-第三周-spring生态源码穿透-重点-ioc-aop","children":[]},{"level":3,"title":"⚡ 第四周：分布式与系统设计（重点：Redis+系统架构）","slug":"⚡-第四周-分布式与系统设计-重点-redis-系统架构","link":"#⚡-第四周-分布式与系统设计-重点-redis-系统架构","children":[]}]},{"level":2,"title":"🔥 最终面试冲刺（最后3天）","slug":"🔥-最终面试冲刺-最后3天","link":"#🔥-最终面试冲刺-最后3天","children":[{"level":3,"title":"每日行动计划","slug":"每日行动计划","link":"#每日行动计划","children":[]},{"level":3,"title":"行为问题准备清单","slug":"行为问题准备清单","link":"#行为问题准备清单","children":[]}]},{"level":2,"title":"📦 高效学习工具包","slug":"📦-高效学习工具包","link":"#📦-高效学习工具包","children":[]}],"git":{"updatedTime":1752572699000,"contributors":[{"name":"Full","username":"Full","email":"2285288446@qq.com","commits":2,"url":"https://github.com/Full"}],"changelog":[{"hash":"fe30d710a47d7eb121735c21d784875542e37055","time":1752572699000,"email":"2285288446@qq.com","author":"Full","message":"面试准备提交"},{"hash":"46fbbb649a2b30164a6d253dd0f5cfcdf1657353","time":1751960301000,"email":"2285288446@qq.com","author":"Full","message":"第一次添加内容"}]},"filePathRelative":"202507社招准备/README.md"}');export{c as comp,p as data};
